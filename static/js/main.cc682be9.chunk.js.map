{"version":3,"sources":["components/EmployeeInfo/EmployeeInfo.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeInfo","props","className","style","maxWidth","margin","firstName","lastName","department","email","employeeData","App","onChangeHandler","e","console","log","target","value","newFilteredEmployees","filter","employee","first_name","toLowerCase","includes","setState","input","filteredEmployees","state","finalEmployees","this","length","htmlFor","type","onChange","display","flexWrap","padding","map","last_name","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc682be9.chunk.js","sourcesContent":["import React from 'react'\n\nconst EmployeeInfo = (props) => {\n  return (\n    <>\n      <div className=\"card text-white bg-secondary mb-3\" style={{maxWidth: '18rem', margin: '10px'}}>\n        <h5 className=\"card-header\">{props.firstName} {props.lastName}</h5>\n        <div className=\"card-body\">\n          <p className=\"card-title\">{props.department}</p>\n          <p className=\"card-text\">{props.email}</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default EmployeeInfo","import React, { Component } from 'react'\nimport EmployeeInfo from './components/EmployeeInfo'\n\nconst employeeData = [\n  {\n    \"first_name\": \"Rik\",\n    \"last_name\": \"Rassmann\",\n    \"email\": \"rrassmann0@hc360.com\",\n    \"department\": \"Human Resources\"\n  },\n  {\n    \"first_name\": \"Nikolos\",\n    \"last_name\": \"Rickson\",\n    \"email\": \"nrickson1@senate.gov\",\n    \"department\": \"Human Resources\"\n  },\n  {\n    \"first_name\": \"Paige\",\n    \"last_name\": \"MacNeilly\",\n    \"email\": \"pmacneilly2@fda.gov\",\n    \"department\": \"Business Development\"\n  },\n  {\n    \"first_name\": \"Julee\",\n    \"last_name\": \"Coronas\",\n    \"email\": \"jcoronas3@bing.com\",\n    \"department\": \"Training\"\n  },\n  {\n    \"first_name\": \"Joelynn\",\n    \"last_name\": \"Jamblin\",\n    \"email\": \"jjamblin4@joomla.org\",\n    \"department\": \"Legal\"\n  },\n  {\n    \"first_name\": \"Shanta\",\n    \"last_name\": \"Wadlow\",\n    \"email\": \"swadlow5@zdnet.com\",\n    \"department\": \"Sales\"\n  },\n  {\n    \"first_name\": \"Estella\",\n    \"last_name\": \"Braunle\",\n    \"email\": \"ebraunle6@time.com\",\n    \"department\": \"Services\"\n  },\n  {\n    \"first_name\": \"Farlay\",\n    \"last_name\": \"Tremolieres\",\n    \"email\": \"ftremolieres7@webs.com\",\n    \"department\": \"Training\"\n  },\n  {\n    \"first_name\": \"Marla\",\n    \"last_name\": \"Dykins\",\n    \"email\": \"mdykins8@sbwire.com\",\n    \"department\": \"Accounting\"\n  },\n  {\n    \"first_name\": \"Kristy\",\n    \"last_name\": \"De Blasio\",\n    \"email\": \"kdeblasio9@ask.com\",\n    \"department\": \"Business Development\"\n  },\n  {\n    \"first_name\": \"Tonya\",\n    \"last_name\": \"Boniface\",\n    \"email\": \"tboniface0@sfgate.com\",\n    \"department\": \"Accounting\"\n  }, {\n    \"first_name\": \"Stanislaw\",\n    \"last_name\": \"Milstead\",\n    \"email\": \"smilstead1@ning.com\",\n    \"department\": \"Services\"\n  }, {\n    \"first_name\": \"Carlina\",\n    \"last_name\": \"Steggals\",\n    \"email\": \"csteggals2@php.net\",\n    \"department\": \"Accounting\"\n  }, {\n    \"first_name\": \"Kennedy\",\n    \"last_name\": \"Winkworth\",\n    \"email\": \"kwinkworth3@discovery.com\",\n    \"department\": \"Services\"\n  }, {\n    \"first_name\": \"Cathlene\",\n    \"last_name\": \"Bannell\",\n    \"email\": \"cbannell4@engadget.com\",\n    \"department\": \"Sales\"\n  }, {\n    \"first_name\": \"Xaviera\",\n    \"last_name\": \"Kondratenya\",\n    \"email\": \"xkondratenya5@acquirethisname.com\",\n    \"department\": \"Research and Development\"\n  }, {\n    \"first_name\": \"Dacey\",\n    \"last_name\": \"Ezzell\",\n    \"email\": \"dezzell6@blogs.com\",\n    \"department\": \"Marketing\"\n  }, {\n    \"first_name\": \"Rebekkah\",\n    \"last_name\": \"Shawcroft\",\n    \"email\": \"rshawcroft7@dion.ne.jp\",\n    \"department\": \"Product Management\"\n  }, {\n    \"first_name\": \"Andres\",\n    \"last_name\": \"Boobyer\",\n    \"email\": \"aboobyer8@disqus.com\",\n    \"department\": \"Human Resources\"\n  }, {\n    \"first_name\": \"Randee\",\n    \"last_name\": \"Newby\",\n    \"email\": \"rnewby9@chron.com\",\n    \"department\": \"Human Resources\"\n  }, {\n    \"first_name\": \"Cleavland\",\n    \"last_name\": \"Ceschi\",\n    \"email\": \"cceschia@xinhuanet.com\",\n    \"department\": \"Accounting\"\n  }, {\n    \"first_name\": \"Park\",\n    \"last_name\": \"Tredwell\",\n    \"email\": \"ptredwellb@samsung.com\",\n    \"department\": \"Human Resources\"\n  }, {\n    \"first_name\": \"Micheal\",\n    \"last_name\": \"Sponton\",\n    \"email\": \"mspontonc@europa.eu\",\n    \"department\": \"Research and Development\"\n  }, {\n    \"first_name\": \"Tova\",\n    \"last_name\": \"Illwell\",\n    \"email\": \"tillwelld@jalbum.net\",\n    \"department\": \"Research and Development\"\n  }, {\n    \"first_name\": \"Zebulen\",\n    \"last_name\": \"Grattage\",\n    \"email\": \"zgrattagee@gravatar.com\",\n    \"department\": \"Support\"\n  }, {\n    \"first_name\": \"Annabal\",\n    \"last_name\": \"Emmatt\",\n    \"email\": \"aemmattf@livejournal.com\",\n    \"department\": \"Support\"\n  }, {\n    \"first_name\": \"Euell\",\n    \"last_name\": \"Steers\",\n    \"email\": \"esteersg@blogspot.com\",\n    \"department\": \"Sales\"\n  }, {\n    \"first_name\": \"Caressa\",\n    \"last_name\": \"Strasse\",\n    \"email\": \"cstrasseh@goo.gl\",\n    \"department\": \"Research and Development\"\n  }, {\n    \"first_name\": \"Juliann\",\n    \"last_name\": \"Wenden\",\n    \"email\": \"jwendeni@whitehouse.gov\",\n    \"department\": \"Research and Development\"\n  }, {\n    \"first_name\": \"Carroll\",\n    \"last_name\": \"Duesbury\",\n    \"email\": \"cduesburyj@timesonline.co.uk\",\n    \"department\": \"Services\"\n  }\n]\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      input: '',\n      filteredEmployees: []\n    }\n  }\n\n  onChangeHandler = e => {\n\n    console.log(e.target.value)\n    const newFilteredEmployees = employeeData.filter(employee => {\n      return employee.first_name.toLowerCase().includes(e.target.value.toLowerCase())\n    })\n    console.log(newFilteredEmployees)\n    \n    this.setState({ input: e.target.value, filteredEmployees: newFilteredEmployees })\n  }\n\n  render() {\n    let finalEmployees\n    if (this.state.filteredEmployees.length > 0) {\n      finalEmployees = this.state.filteredEmployees\n    } else {\n      finalEmployees = employeeData\n    }\n    return (\n      <>\n      <h1>Employee Directory</h1>\n      <br/>\n      <label htmlFor=\"search\">Search Name </label>\n      <input type=\"text\" onChange={this.onChangeHandler}/>\n      <div style={{display: 'flex', flexWrap:'wrap', padding: '20px'}}>\n          {finalEmployees.map(employee => {\n          return <EmployeeInfo firstName={employee.first_name} lastName={employee.last_name} department={employee.department} email={employee.email} />\n        })}\n      </div>\n      </>\n    )\n  }\n}\n\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}